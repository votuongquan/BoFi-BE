version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: meobeo-api:latest
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - audio_data:/data/audio 
    environment:
      - ENV=development
      - RUN_TESTS=false  
      - TZ=Asia/Ho_Chi_Minh
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=host.docker.internal
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DOCKER_ENVIRONMENT=True
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-meobeo-ai}
      - MINIO_SECURE=${MINIO_SECURE:-False}

      - PYTHONDONTWRITEBYTECODE=1
    env_file:
      - .env
    # Add extra_hosts to ensure host.docker.internal works on all Docker environments
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    networks:
      - meobeo-network
    depends_on:
      - minio

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    networks:
      - meobeo-network
  celery:
    build:  
      context: .
      dockerfile: Dockerfile
    image: meobeo-api:latest
    command: ["/app/startup.sh"]  # Explicitly set command to use startup.sh
    volumes:
      - .:/app
      - audio_data:/data/audio  # Add shared volume for audio files
    environment:
      - ENV=development
      - SERVICE_TYPE=celery_worker
      - CELERY_BROKER_URL=redis://redis-meobeo:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-meobeo:6379/0
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-meobeo-ai}
      - MINIO_SECURE=false
      - CELERY_WORKER_CONCURRENCY=4  # Set concurrency for Celery workers
    env_file:
      - .env
    networks:
      - meobeo-network
    depends_on:
      - redis-meobeo
      - minio
      - api
    restart: always
  redis-meobeo:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - meobeo-network
    restart: always

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.frontend
  #   image: meobeo-frontend:latest
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - NEXT_PUBLIC_API_URL=http://localhost:8000
  #   networks:
  #     - meobeo-network
  #   depends_on:
  #     - api
  #   restart: always

networks:
  meobeo-network:
    driver: bridge

volumes:
  minio-data:
  audio_data:  # Add new volume for audio files

